---
layout: post
title:  "WHERE IS MY MIND"
date:   2017-04-19 14:29:45 +0000
---


You know this song by the Pixies right? So good. If you don't know it, check it out! 

Where is my mind? Woof! IDK. Somewhere deep into object relationships in Ruby and I think I'm lost down there forever! This week has been quite the challenge! My mind has been clouded with uncertainty about my ability to really learn and understand code. So, instead of jokes and gifs, I am going to teach you about object relationships in Ruby. Exciting stuff!! As you may know (because you are a devoted reader and have read all three of my other posts) that I am also a practicing physical therapist. While in physical therapy school, I found the best way to really understand something was to teach someone else what I was learning. Mind you, physical therapy and the physical sciences are my comfort zone! I might not remember all the cranial nerves and their exact pathways off the top of my head right now, but I guarantee after a quick review, I could spit it out like it was just yesterday that I was being tested on it. I digress. The point is, (1) coding is WAY out of my comfort zone and my brain is currently exploding, and (2) teaching other people things you are trying to learn is a great learning tool! You. Are. Welcome! I wish I could just leave it at that and say that teaching you to teach someone something you are trying to learn is a great learning tool is what I needed to teach you........keeping up? ;)

Okay, object relationships. I must REALLY simplify this in order to create sentences that make sense! Let's say I just started a physical therapy clinic and I need a way to keep track of all my physical therapists and their patients. In Ruby, I can create classes that will keep track of all my therapists that I hire and all the patients that visit my clinic. These classes can be built so that when I "create" (or hire) a new therapist, it will contain their name, hire date, years of experience......whatever demographics I want, I can build the program to have that available. I can also create my patient class the same way. I would probably want a way to track what injury they came in with, what their date of birth and insurance information is, who referred them, what their medical history is, etc. This is great! Now I can ask my program to show me all my therapists and all the patients. 

What if I wanted to see the relationship between my therapists and patients? I want to know which therapists are seeing which patients. I can do that with object relationships. Through object relationships in Ruby I can assign a therapist to a patient and that patient will "know" which therapist they are seeing. I could also build another class that keeps track of what general injuries are seen at my clinic; knee injuries, shoulder injuries, neck injuries, etc. This would be helpful for many reasons. One, it would be nice to know, in general, what are the most common injured body parts so that I can market my clinic as being proficient in, for example, knee rehab. It would also be nice to know what is the least common injured body part that my clinic sees and I could then research and find out why my clinic is not getting that traffic. Is it because it is generally a less common injury? Or is it because we are not marketing to that demographic? I could also use object relationships between my injured body parts class and therapists class to know which therapists see the highest volume of which area of the body. What if I wanted to see the relationship between my therapists and patients? I want to know which therapists are seeing which patients. I can do that with object relationship[](http://)s. Through object relationships in Ruby I can assign a therapist to a patient and that patient will "know" which therapist they are seeing. I could also build another class that keeps track of what general injuries are seen at my clinic; knee injuries, shoulder injuries, neck injuries, etc. This would be helpful for many reasons. One, it would be nice to know, in general, what are the most common injured body parts so that I can market my clinic as being proficient in, for example, knee rehab. It would also be nice to know what is the least common injured body part that my clinic sees and I could then research and find out why my clinic is not getting that traffic. Is it because it is generally a less common injury? Or is it because we are not marketing to that demographic? I could also use object relationships between my injured body parts class and therapists class to know which therapists see the highest volume of which area of the body. 

Now I know what you're thinking, you want me to show you how to do all the above right? You're on the edge of your seat dying to see the code! The suspense is killing you? Well, I'm not quite there yet. Just describing the above to you took a ton of brainpower! BUT, I sense a theme coming on and I bet that subsequent posts might be of me teaching you more about how to create the lovely program that I just described. Stay tuned! 

P.S. But really, where is my mind? This post is far different then what I thought it would be when I first started writing it and decided on the title. But I guess it is fitting! Learning to code is tough!

And because we have to get a funny image in here somewhere....It's always a [roller coaster](http://imgur.com/gallery/Pc5pmxL)!
